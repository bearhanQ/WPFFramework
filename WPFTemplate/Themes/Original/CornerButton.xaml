<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPFTemplate">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WPFTemplate;component/Resources/Converters.xaml"/>
        
    </ResourceDictionary.MergedDictionaries>

    <!--#region CornerButton-->
    <FontFamily x:Key="FatSheep">pack://application:,,,/WPFTemplate;component/Resources/iconfont.ttf#FatSheep</FontFamily>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#6CBCEA"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <SolidColorBrush x:Key="Button.Hover.ShadowBorderColor" Color="White"/>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CornerButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>

            <Trigger Property="ButtonType" Value="Normal">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:CornerButton}">
                            <Grid>
                                <Border x:Name="PART_ClickOutlineBorder" BorderThickness="2" BorderBrush="{TemplateBinding BorderBrush}" Margin="-4" Opacity="0" 
                                        CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding BorderBrush}"/>
                                <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" Panel.ZIndex="1">
                                    <Grid>
                                        <Border x:Name="PART_ShadowBorder" Background="{StaticResource ResourceKey = Button.Hover.ShadowBorderColor}"
                                                CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <TextBlock x:Name="textblockIcon" FontFamily="{StaticResource FatSheep}" FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding Icon}" 
                                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed" Value="true"/>
                                        <Condition Property="PressShowShadow" Value="true"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="PART_ClickOutlineBorder" Value="0.5"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="PART_ShadowBorder" Property="Opacity" Value="0.5"/>
                                    <Setter TargetName="textblockIcon" Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=local:CornerButton}, Path=MouseOverForeground}"/>
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=local:CornerButton}, Path=MouseOverForeground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            
            <Trigger Property="ButtonType" Value="OutLine">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:CornerButton}">
                            <Grid>
                                <Border x:Name="PART_ClickOutlineBorder" BorderThickness="2" BorderBrush="{TemplateBinding BorderBrush}" Margin="-4" Opacity="0" 
                                        CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding BorderBrush}"/>
                                <Border x:Name="border" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" Panel.ZIndex="1">
                                    <Grid>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <TextBlock x:Name="textblockIcon" FontFamily="{StaticResource FatSheep}" FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding Icon}" 
                                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed" Value="true"/>
                                        <Condition Property="PressShowShadow" Value="true"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="PART_ClickOutlineBorder" Value="0.5"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="textblockIcon" Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=local:CornerButton}, Path=MouseOverForeground}"/>
                                    <Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=local:CornerButton}, Path=Background}"/>
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=local:CornerButton}, Path=MouseOverForeground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="ButtonType" Value="Link">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:CornerButton}">
                            <Grid Background="Transparent">
                                <StackPanel x:Name="stackPanel" Orientation="Horizontal" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <TextBlock x:Name="textblockIcon" FontFamily="{StaticResource FatSheep}" FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding Icon}" 
                                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </StackPanel>
                                <Border x:Name="BorderUnderline" BorderBrush="{TemplateBinding Foreground}" BorderThickness="0,0,0,1" Visibility="Hidden"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="BorderUnderline" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="BorderUnderline" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="BorderUnderline" Value="{StaticResource Button.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="LinkShowUnderLine" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible" TargetName="BorderUnderline"/>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="textblockIcon" Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=local:CornerButton}, Path=MouseOverForeground}"/>
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=local:CornerButton}, Path=MouseOverForeground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            
        </Style.Triggers>
        
    </Style>
    <!--#endregion-->

</ResourceDictionary>